{
  "{\"sourceRoot\":\"C:\\\\Users\\\\sweth\\\\OneDrive\\\\Desktop\\\\S.WORK\\\\Node.js\\\\node.js-project\\\\Dashboard\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\sweth\\\\OneDrive\\\\Desktop\\\\S.WORK\\\\Node.js\\\\node.js-project\\\\Dashboard\",\"filename\":\"C:\\\\Users\\\\sweth\\\\OneDrive\\\\Desktop\\\\S.WORK\\\\Node.js\\\\node.js-project\\\\Dashboard\\\\app.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\sweth\\\\OneDrive\\\\Desktop\\\\S.WORK\\\\Node.js\\\\node.js-project\\\\Dashboard\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\sweth\\OneDrive\\Desktop\\S.WORK\\Node.js\\node.js-project\\Dashboard\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\sweth\\OneDrive\\Desktop\\S.WORK\\Node.js\\node.js-project\\Dashboard",
      "filename": "C:\\Users\\sweth\\OneDrive\\Desktop\\S.WORK\\Node.js\\node.js-project\\Dashboard\\app.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\sweth\\OneDrive\\Desktop\\S.WORK\\Node.js\\node.js-project\\Dashboard",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\sweth\\OneDrive\\Desktop\\S.WORK\\Node.js\\node.js-project\\Dashboard\\app.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\sweth\\OneDrive\\Desktop\\S.WORK\\Node.js\\node.js-project\\Dashboard\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\sweth\\OneDrive\\Desktop\\S.WORK\\Node.js\\node.js-project\\Dashboard\\",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar db;\n\nvar MongoClient = require('mongodb').MongoClient;\n\nvar port = 8900;\nvar app = (0, _express[\"default\"])();\nvar mongourl = 'mongodb://127.0.0.1:27017/';\nvar col_name = 'userlist';\napp.use(_express[\"default\"][\"static\"](__dirname + '/public'));\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n}));\napp.use(_bodyParser[\"default\"].json());\napp.set('view engine', 'ejs');\napp.set('views', './views'); //get data from MongoDB to display on index page\n\napp.get('/', function (req, resp) {\n  db.collection(col_name).find().toArray(function (err, result) {\n    if (err) throw err;\n    resp.render('index.ejs', {\n      data: result\n    });\n  });\n}); //post(insert) data from the UI into MongoDB\n\napp.post('/addData', function (req, resp) {\n  db.collection(col_name).insert(req.body, function (err, result) {\n    if (err) throw err;\n    console.log('data inserted');\n  });\n  resp.redirect('/');\n}); //delete selected user in the UI from MongoDB Database\n\napp[\"delete\"]('/delete_user', function (req, res) {\n  db.collection(col_name).findOneAndDelete({\n    \"name\": req.body.name\n  }, function (err, result) {\n    if (err) return res.send(500, err);\n    res.send({\n      message: 'success'\n    });\n  });\n}); //find user in the MongoDB database by name\n\napp.post('/find_by_name', function (req, resp) {\n  var name = req.body.name;\n  db.collections(col_name).find({\n    name: name\n  }).toArray(function (err, result) {\n    if (err) throw err;\n    resp.send(result);\n  });\n}); //update user record from the UI into the MongoDB Database\n\napp.put('/update_user', function (req, res) {\n  db.collection(col_name).findOneAndUpdate({\n    \"name\": req.body.name\n  }, {\n    $set: {\n      name: req.body.name,\n      email: req.body.email,\n      phone: req.body.phone\n    }\n  }, function (err, result) {\n    if (err) return res.send(err);\n    res.send(result);\n  });\n}); // Opening Add User page\n\napp.get('/adduser', function (req, res) {\n  res.render('admin'); // display the admin.ejs view\n}); //connect to MongoDB Database\n\nMongoClient.connect(mongourl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}, function (err, client) {\n  if (err) throw err;\n  db = client.db('march_dashboard');\n  app.listen(port, function () {\n    console.log(\"Server is running on port \".concat(port, \" !\"));\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJkYiIsIk1vbmdvQ2xpZW50IiwicmVxdWlyZSIsInBvcnQiLCJhcHAiLCJtb25nb3VybCIsImNvbF9uYW1lIiwidXNlIiwiZXhwcmVzcyIsIl9fZGlybmFtZSIsImJvZHlQYXJzZXIiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwic2V0IiwiZ2V0IiwicmVxIiwicmVzcCIsImNvbGxlY3Rpb24iLCJmaW5kIiwidG9BcnJheSIsImVyciIsInJlc3VsdCIsInJlbmRlciIsImRhdGEiLCJwb3N0IiwiaW5zZXJ0IiwiYm9keSIsImNvbnNvbGUiLCJsb2ciLCJyZWRpcmVjdCIsInJlcyIsImZpbmRPbmVBbmREZWxldGUiLCJuYW1lIiwic2VuZCIsIm1lc3NhZ2UiLCJjb2xsZWN0aW9ucyIsInB1dCIsImZpbmRPbmVBbmRVcGRhdGUiLCIkc2V0IiwiZW1haWwiLCJwaG9uZSIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJjbGllbnQiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFJQSxFQUFKOztBQUNBLElBQU1DLFdBQVcsR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBUCxDQUFtQkQsV0FBdkM7O0FBQ0EsSUFBTUUsSUFBSSxHQUFHLElBQWI7QUFDQSxJQUFNQyxHQUFHLEdBQUUsMEJBQVg7QUFDQSxJQUFNQyxRQUFRLEdBQUcsNEJBQWpCO0FBQ0EsSUFBTUMsUUFBUSxHQUFHLFVBQWpCO0FBRUFGLEdBQUcsQ0FBQ0csR0FBSixDQUFRQyw4QkFBZUMsU0FBUyxHQUFHLFNBQTNCLENBQVI7QUFDQUwsR0FBRyxDQUFDRyxHQUFKLENBQVFHLHVCQUFXQyxVQUFYLENBQXNCO0FBQUNDLEVBQUFBLFFBQVEsRUFBRTtBQUFYLENBQXRCLENBQVI7QUFDQVIsR0FBRyxDQUFDRyxHQUFKLENBQVFHLHVCQUFXRyxJQUFYLEVBQVI7QUFFQVQsR0FBRyxD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R0FBbEUsRUFNRSxVQUFDcEIsR0FBRCxFQUFNQyxNQUFOLEVBQWlCO0FBQ2YsUUFBR0QsR0FBSCxFQUFRLE9BQU9VLEdBQUcsQ0FBQ0csSUFBSixDQUFTYixHQUFULENBQVA7QUFDUlUsSUFBQUEsR0FBRyxDQUFDRyxJQUFKLENBQVNaLE1BQVQ7QUFDSCxHQVREO0FBVUgsQ0FYRCxFLENBYUE7O0FBQ0FsQixHQUFHLENBQUNXLEdBQUosQ0FBUSxVQUFSLEVBQW9CLFVBQUNDLEdBQUQsRUFBTWUsR0FBTixFQUFZO0FBQzVCQSxFQUFBQSxHQUFHLENBQUNSLE1BQUosQ0FBVyxPQUFYLEVBRDRCLENBQ1A7QUFDeEIsQ0FGRCxFLENBSUE7O0FBQ0F0QixXQUFXLENBQUN5QyxPQUFaLENBQW9CckMsUUFBcEIsRUFBOEI7QUFBRXNDLEVBQUFBLGVBQWUsRUFBQyxJQUFsQjtBQUF3QkMsRUFBQUEsa0JBQWtCLEVBQUU7QUFBNUMsQ0FBOUIsRUFBaUYsVUFBQ3ZCLEdBQUQsRUFBTXdCLE1BQU4sRUFBZTtBQUM1RixNQUFHeEIsR0FBSCxFQUFRLE1BQU1BLEdBQU47QUFDUnJCLEVBQUFBLEVBQUUsR0FBRzZDLE1BQU0sQ0FBQzdDLEVBQVAsQ0FBVSxpQkFBVixDQUFMO0FBQ0FJLEVBQUFBLEdBQUcsQ0FBQzBDLE1BQUosQ0FBVzNDLElBQVgsRUFBaUIsWUFBSTtBQUNqQnlCLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixxQ0FBeUMxQixJQUF6QztBQUNILEdBRkQ7QUFHSCxDQU5EIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcc3dldGhcXE9uZURyaXZlXFxEZXNrdG9wXFxTLldPUktcXE5vZGUuanNcXG5vZGUuanMtcHJvamVjdFxcRGFzaGJvYXJkXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcclxuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xyXG5cclxubGV0IGRiO1xyXG5jb25zdCBNb25nb0NsaWVudCA9IHJlcXVpcmUoJ21vbmdvZGInKS5Nb25nb0NsaWVudDtcclxuY29uc3QgcG9ydCA9IDg5MDA7XHJcbmNvbnN0IGFwcD0gZXhwcmVzcygpO1xyXG5jb25zdCBtb25nb3VybCA9ICdtb25nb2RiOi8vMTI3LjAuMC4xOjI3MDE3Lyc7XHJcbmNvbnN0IGNvbF9uYW1lID0gJ3VzZXJsaXN0JztcclxuXHJcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoX19kaXJuYW1lICsgJy9wdWJsaWMnKSk7XHJcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHtleHRlbmRlZDogdHJ1ZX0pKTtcclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XHJcblxyXG5hcHAuc2V0KCd2aWV3IGVuZ2luZScsICdlanMnKTtcclxuYXBwLnNldCgndmlld3MnLCAnLi92aWV3cycpO1xyXG5cclxuLy9nZXQgZGF0YSBmcm9tIE1vbmdvREIgdG8gZGlzcGxheSBvbiBpbmRleCBwYWdlXHJcbmFwcC5nZXQoJy8nLCAocmVxLCByZXNwKT0+eyBcclxuICAgIGRiLmNvbGxlY3Rpb24oY29sX25hbWUpLmZpbmQoKS50b0FycmF5KChlcnIsIHJlc3VsdCk9PntcclxuICAgICAgICBpZihlcnIpIHRocm93IGVycjtcclxuICAgICAgICByZXNwLnJlbmRlcignaW5kZXguZWpzJyx7IGRhdGEgOiByZXN1bHR9KTtcclxuICAgIH0pO1xyXG59KTtcclxuXHJcbi8vcG9zdChpbnNlcnQpIGRhdGEgZnJvbSB0aGUgVUkgaW50byBNb25nb0RCXHJcbmFwcC5wb3N0KCcvYWRkRGF0YScsIChyZXEsIHJlc3ApID0+IHsgXHJcbiAgICBkYi5jb2xsZWN0aW9uKGNvbF9uYW1lKS5pbnNlcnQocmVxLmJvZHksIChlcnIsIHJlc3VsdCkgPT4ge1xyXG4gICAgICAgIGlmKGVycikgdGhyb3cgZXJyO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdkYXRhIGluc2VydGVkJyk7XHJcbiAgICB9KTtcclxuICAgIHJlc3AucmVkaXJlY3QoJy8nKTtcclxufSk7XHJcblxyXG4vL2RlbGV0ZSBzZWxlY3RlZCB1c2VyIGluIHRoZSBVSSBmcm9tIE1vbmdvREIgRGF0YWJhc2VcclxuYXBwLmRlbGV0ZSgnL2RlbGV0ZV91c2VyJywgKHJlcSwgcmVzKT0+eyBcclxuICAgIGRiLmNvbGxlY3Rpb24oY29sX25hbWUpLmZpbmRPbmVBbmREZWxldGUoe1wibmFtZVwiOnJlcS5ib2R5Lm5hbWV9LCAoZXJyLCByZXN1bHQpID0+IHtcclxuICAgICAgICBpZihlcnIpIHJldHVybiByZXMuc2VuZCg1MDAsIGVycilcclxuICAgICAgICByZXMuc2VuZCh7bWVzc2FnZTogJ3N1Y2Nlc3MnfSk7XHJcbiAgICB9KTtcclxufSk7XHJcblxyXG4vL2ZpbmQgdXNlciBpbiB0aGUgTW9uZ29EQiBkYXRhYmFzZSBieSBuYW1lXHJcbmFwcC5wb3N0KCcvZmluZF9ieV9uYW1lJywgKHJlcSwgcmVzcCk9PnsgXHJcbiAgICBsZXQgbmFtZSA9IHJlcS5ib2R5Lm5hbWU7XHJcbiAgICBkYi5jb2xsZWN0aW9ucyhjb2xfbmFtZSkuZmluZCh7bmFtZSA6IG5hbWV9KS50b0FycmF5KChlcnIsIHJlc3VsdCkgPT4ge1xyXG4gICAgICAgIGlmKGVycikgdGhyb3cgZXJyO1xyXG4gICAgICAgIHJlc3Auc2VuZChyZXN1bHQpXHJcbiAgICB9KTtcclxufSk7XHJcblxyXG4vL3VwZGF0ZSB1c2VyIHJlY29yZCBmcm9tIHRoZSBVSSBpbnRvIHRoZSBNb25nb0RCIERhdGFiYXNlXHJcbmFwcC5wdXQoJy91cGRhdGVfdXNlcicsIChyZXEsIHJlcykgPT4geyBcclxuICAgIGRiLmNvbGxlY3Rpb24oY29sX25hbWUpLmZpbmRPbmVBbmRVcGRhdGUoe1wibmFtZVwiOiByZXEuYm9keS5uYW1lfSwge1xyXG4gICAgICAgICRzZXQ6e1xyXG4gICAgICAgICAgICBuYW1lOiByZXEuYm9keS5uYW1lLFxyXG4gICAgICAgICAgICBlbWFpbDpyZXEuYm9keS5lbWFpbCxcclxuICAgICAgICAgICAgcGhvbmU6cmVxLmJvZHkucGhvbmVcclxuICAgICAgICB9XHJcbiAgICB9LChlcnIsIHJlc3VsdCkgPT4ge1xyXG4gICAgICAgIGlmKGVycikgcmV0dXJuIHJlcy5zZW5kKGVycik7XHJcbiAgICAgICAgcmVzLnNlbmQocmVzdWx0KVxyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxuLy8gT3BlbmluZyBBZGQgVXNlciBwYWdlXHJcbmFwcC5nZXQoJy9hZGR1c2VyJywgKHJlcSwgcmVzKT0+e1xyXG4gICAgcmVzLnJlbmRlcignYWRtaW4nKTsgLy8gZGlzcGxheSB0aGUgYWRtaW4uZWpzIHZpZXdcclxufSk7XHJcblxyXG4vL2Nvbm5lY3QgdG8gTW9uZ29EQiBEYXRhYmFzZVxyXG5Nb25nb0NsaWVudC5jb25uZWN0KG1vbmdvdXJsLCB7IHVzZU5ld1VybFBhcnNlcjp0cnVlLCB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWV9LCAoZXJyLCBjbGllbnQpPT57IFxyXG4gICAgaWYoZXJyKSB0aHJvdyBlcnI7XHJcbiAgICBkYiA9IGNsaWVudC5kYignbWFyY2hfZGFzaGJvYXJkJyk7XHJcbiAgICBhcHAubGlzdGVuKHBvcnQsICgpPT57XHJcbiAgICAgICAgY29uc29sZS5sb2coYFNlcnZlciBpcyBydW5uaW5nIG9uIHBvcnQgJHtwb3J0fSAhYCk7XHJcbiAgICB9KTtcclxufSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "db",
        "MongoClient",
        "require",
        "port",
        "app",
        "mongourl",
        "col_name",
        "use",
        "express",
        "__dirname",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "set",
        "get",
        "req",
        "resp",
        "collection",
        "find",
        "toArray",
        "err",
        "result",
        "render",
        "data",
        "post",
        "insert",
        "body",
        "console",
        "log",
        "redirect",
        "res",
        "findOneAndDelete",
        "name",
        "send",
        "message",
        "collections",
        "put",
        "findOneAndUpdate",
        "$set",
        "email",
        "phone",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "client",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\sweth\\OneDrive\\Desktop\\S.WORK\\Node.js\\node.js-project\\Dashboard\\",
      "sourcesContent": [
        "import express from 'express';\r\nimport bodyParser from 'body-parser';\r\n\r\nlet db;\r\nconst MongoClient = require('mongodb').MongoClient;\r\nconst port = 8900;\r\nconst app= express();\r\nconst mongourl = 'mongodb://127.0.0.1:27017/';\r\nconst col_name = 'userlist';\r\n\r\napp.use(express.static(__dirname + '/public'));\r\napp.use(bodyParser.urlencoded({extended: true}));\r\napp.use(bodyParser.json());\r\n\r\napp.set('view engine', 'ejs');\r\napp.set('views', './views');\r\n\r\n//get data from MongoDB to display on index page\r\napp.get('/', (req, resp)=>{ \r\n    db.collection(col_name).find().toArray((err, result)=>{\r\n        if(err) throw err;\r\n        resp.render('index.ejs',{ data : result});\r\n    });\r\n});\r\n\r\n//post(insert) data from the UI into MongoDB\r\napp.post('/addData', (req, resp) => { \r\n    db.collection(col_name).insert(req.body, (err, result) => {\r\n        if(err) throw err;\r\n        console.log('data inserted');\r\n    });\r\n    resp.redirect('/');\r\n});\r\n\r\n//delete selected user in the UI from MongoDB Database\r\napp.delete('/delete_user', (req, res)=>{ \r\n    db.collection(col_name).findOneAndDelete({\"name\":req.body.name}, (err, result) => {\r\n        if(err) return res.send(500, err)\r\n        res.send({message: 'success'});\r\n    });\r\n});\r\n\r\n//find user in the MongoDB database by name\r\napp.post('/find_by_name', (req, resp)=>{ \r\n    let name = req.body.name;\r\n    db.collections(col_name).find({name : name}).toArray((err, result) => {\r\n        if(err) throw err;\r\n        resp.send(result)\r\n    });\r\n});\r\n\r\n//update user record from the UI into the MongoDB Database\r\napp.put('/update_user', (req, res) => { \r\n    db.collection(col_name).findOneAndUpdate({\"name\": req.body.name}, {\r\n        $set:{\r\n            name: req.body.name,\r\n            email:req.body.email,\r\n            phone:req.body.phone\r\n        }\r\n    },(err, result) => {\r\n        if(err) return res.send(err);\r\n        res.send(result)\r\n    });\r\n});\r\n\r\n// Opening Add User page\r\napp.get('/adduser', (req, res)=>{\r\n    res.render('admin'); // display the admin.ejs view\r\n});\r\n\r\n//connect to MongoDB Database\r\nMongoClient.connect(mongourl, { useNewUrlParser:true, useUnifiedTopology: true}, (err, client)=>{ \r\n    if(err) throw err;\r\n    db = client.db('march_dashboard');\r\n    app.listen(port, ()=>{\r\n        console.log(`Server is running on port ${port} !`);\r\n    });\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1600527848776
  }
}